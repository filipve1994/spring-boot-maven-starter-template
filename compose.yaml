services:
  mysql:
    image: 'mysql:latest'
    environment:
      - 'MYSQL_DATABASE=mydatabase'
      - 'MYSQL_PASSWORD=secret'
      - 'MYSQL_ROOT_PASSWORD=verysecret'
      - 'MYSQL_USER=myuser'
    ports:
      - '3306:3306'
    networks:
      - springboot-sql-net

  oracle:
    image: 'gvenzl/oracle-free:latest'
    environment:
      - 'ORACLE_PASSWORD=secret'
    ports:
      - '1521:1521'
    networks:
      - springboot-sql-net

  postgres:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=mydatabase'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=myuser'
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d mydb -U postgres" ]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - springboot-sql-net

  rabbitmq:
    image: 'rabbitmq:latest'
    environment:
      - 'RABBITMQ_DEFAULT_PASS=secret'
      - 'RABBITMQ_DEFAULT_USER=myuser'
    ports:
      - '5672:5672'

  zipkin:
    image: 'openzipkin/zipkin:latest'
    ports:
      - '9411:9411'

## EXTRAS ADDED NOT GENERATED BY START.SPRING.IO

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog:v1.0.1
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - springboot-sql-net
    restart: always

  # By default, SonarQube is using h2 database which is not recommended for production
  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_temp:/opt/sonarqube/temp

## example how to start your app

#  departmentapi:
#    container_name: departmentapi
#    build:
#      context: ./
#      dockerfile: Dockerfile
#    ports:
#      - "8080:8080"
#    depends_on:
#      postgresdb:
#        condition: service_healthy
#    networks:
#      - springboot-postgres-net
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresdb:5432/mydb
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: pass
#      SPRING_JPA_HIBERNATE_DDL_AUTO: update
#      EMAIL_HOST: mailhog
#    restart: on-failure

networks:
  sonar:
  springboot-sql-net:
    driver: bridge
volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_temp: