# https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#appendix.application-properties
server:
  address: localhost
  # Random/Dynamic Port:
  # port: 0
  # Random port in a custom predefined range:
  port: ${random.int(8020,8030)}
  #  port: 8080
  compression:
    enabled: true
  error:
    include-message: always
    include-exception: true
    include-binding-errors: always
    whitelabel:
      enabled: true
  forward-headers-strategy: framework
  shutdown: graceful
  servlet:
    encoding:
      charset: UTF-8 #  Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly
      enabled: true # Enable http encoding support
      force: true
  http2:
    enabled: false

spring:
  application:
    name: springbootmavenstartertemplate
    version: ^project.version^
    appVersion: '@project.version@'
    description: ${APP_DESCRIPTION:App Description}
  profiles:
#    active: local-h2
    active: local-mysql
  liquibase:
    enabled: false # default turning liquibase off
  #  https://www.baeldung.com/docker-compose-support-spring-boot
  #  https://spring.io/blog/2023/06/21/docker-compose-support-in-spring-boot-3-1
  #  https://howtodoinjava.com/spring-boot/spring-boot-docker-compose/
  docker:
    compose:
      enabled: false # docker default disabled
  #      file: ./compose.yaml # choose another location => default root of the project
  # global default settings for every type of db and profile in general
  jpa:
    show-sql: false
    properties:
      hibernate:
        show_sql: false
        use_sql_comments: false
        format_sql: false
        generate_statistics: false
#        # https://www.baeldung.com/spring-boot-h2-jdbcsqlsyntaxerrorexception-expected-identifier
#        globally_quoted_identifiers: true
    generate-ddl: false
    # https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.5-Release-Notes#hibernate-and-datasql
    # https://stackoverflow.com/questions/67678311/spring-boot-is-not-creating-tables-automatically/67678945#67678945
    # put it only on true when using a data.sql to insert data into the DB
    defer-datasource-initialization: false
    hibernate:
      ddl-auto: none
  jackson:
    time-zone: "Europe/Brussels"
    date-format: com.fasterxml.jackson.databind.util.ISO8601DateFormat
    visibility:
      field: any
      getter: none
      setter: none
      is-getter: none
  thymeleaf:
    cache: false
  web:
    locale: en
    locale-resolver: fixed
  data:
    web:
      pageable:
        default-page-size: 10
        one-indexed-parameters: false
        max-page-size: 2000
    rest:
      # defines that you should not expose the @repository
      detection-strategy: annotated
  batch:
    job:
      enabled: false
    jdbc:
      isolation-level-for-create: default
  # https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html#common-application-properties-cache
  messages:
    basename: locales.messages
    encoding: UTF-8
    cache-duration: ${MESSAGES_CACHE_DURATION:-1}

#  cache:
#    cache-names: users, examples
#    caffeine.spec: maximumSize=1000,expireAfterAccess=60s

#    redis:
#      host: localhost
#      port: 6379

logging:
  level:
    root: info
    org.springframework: INFO
    org.springframework.security: debug
    org:
      fve:
        springbootprojects: INFO
      # Enable JPA / Hibernate debugging
      hibernate:
        SQL: debug
        type:
          descriptor:
            sql:
              BasicBinder: TRACE

  charset:
    console: UTF-8
    file: UTF-8
  config:
  file:
    name: myapp.log
    path: ./myapp.log
  include-application-name: true
  pattern:
    console: "%d{HH:mm:ss.SSS} %highlight(%.-1level) %cyan(%40.40logger{39}): %msg%n%throwable"
#    console: "%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
#    correlation:
    dateformat: "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
    file: "%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
    level: "%5p"

springdoc:
  version: '@springdoc.version@'
  api-docs:
    enabled: true
    path: /v3/api-docs
    version: openapi_3_0
  #    version: openapi_3_1
  swagger-ui:
    csrf:
      enabled: false
      use-local-storage: false
      use-session-storage: false
    try-it-out-enabled: true
    path: /swagger-ui
    groups-order: desc
    operations-sorter: method
    use-root-path: true
    disable-swagger-default-url: true
    enabled: true
    syntax-highlight:
      activated: true
    display-request-duration: true
  #    persist-authorization: true
  show-login-endpoint: false
  packages-to-scan: org.fve.springbootprojects
  paths-to-match: /**
  show-actuator: false



#####
# custom properties
#####

app:
  config:
    aspectjlogging:
      enabled: true
    caching:
      enabled: true
    jpa:
      auditing:
        enabled: true
  description: '@project.description@'
  version: '@project.version@'
  registration:
    email:
      token:
        expires-in: ${APP_REGISTRATION_EMAIL_TOKEN_EXPIRES_IN:#{60 * 60 * 1000}} # 60 minutes in milliseconds
    password:
      token:
        expires-in: ${APP_REGISTRATION_PASSWORD_TOKEN_EXPIRES_IN:#{60 * 60 * 1000}} # 60 minutes in milliseconds
  default-locale: ${APP_DEFAULT_LOCALE:en}
  default-timezone: ${APP_DEFAULT_TIMEZONE:Europe/Brussels}
  url: ${APP_URL:http://localhost:${server.port}}
  frontend-url: ${APP_FRONTEND_URL:http://localhost:3000}
  secret: ${APP_SECRET:90c8c2c617816e6a2afe2c4ed8abcfeed5144a0d73a39648df3228690b64f45e}
  jwt:
    secretKey: ${APP_SECRET:90c8c2c617816e6a2afe2c4ed8abcfeed5144a0d73a39648df3228690b64f45e}
    issuer: ${JWT_ISSUER:https://github.com/fve}
    expiration-milliseconds: 604800000
    expirationMinute: 10
#    token:
#      expires-in: ${APP_JWT_TOKEN_EXPIRES_IN:#{60 * 60 * 1000}} # 60 minutes in milliseconds
#    refresh-token:
#      expires-in: ${APP_JWT_REFRESH_TOKEN_EXPIRES_IN:#{24 * 60 * 60 * 1000}} # 24 hours in milliseconds
#    remember-me:
#      expires-in: ${APP_JWT_REMEMBER_ME_EXPIRES_IN:#{24 * 60 * 60 * 1000 * 7}} # 7 days in milliseconds
  swagger:
    contact-name: Filip VE
    contact-mail: ${SWAGGER_CONTACT_MAIL:filipve@email.com}
    contact-url: ${SWAGGER_CONTACT_URL:https://filipve.com}
    name: ${SWAGGER_APP_NAME:Spring Boot Boilerplate Project}
    description: "Spring Boot Boilerplate is a starter kit for developing production ready SpringBoot Applications. This project includes : Spring Boot(3.1.2), Spring Data JPA, Spring Validation, Spring Security + JWT Token, MySQL, Mapstruct, Lombok, Swagger "
    version: ${SWAGGER_APP_VERSION:2.0.0}
    license-url: ${SWAGGER_APP_LICENSE_URL:https://www.apache.org/licenses/LICENSE-2.0.html}
    license: ${SWAGGER_APP_LICENSE:Apache 2.0}

management:
  endpoint:
    health:
      enabled: true
      show-details: always
    auditevents:
      enabled: true
    conditions:
      enabled: true
    beans:
      enabled: true
    caches:
      enabled: true
    configprops:
      enabled: true
      show-values: never
    env:
      enabled: true
      show-values: never
    info:
      enabled: true
    liquibase:
      enabled: true
    logfile:
      enabled: true
      external-file: ./myapp.log
    loggers:
      enabled: true
    mappings:
      enabled: true
    httpexchanges:
      enabled: true
    metrics:
      enabled: true
    quartz:
      enabled: true
    prometheus:
      enabled: true
    scheduledtasks:
      enabled: true
    startup:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
      discovery:
        enabled: true
    enabled-by-default: true
    jmx:
      exposure:
        include: "*"
  auditevents:
    enabled: true
  tracing:
    enabled: false
  health:
    db:
      enabled: true
    readinessstate:
      enabled: true
    defaults:
      enabled: true
    diskspace:
      enabled: true
    livenessstate:
      enabled: true
    mail:
      enabled: true
    ping:
      enabled: true
    rabbit:
      enabled: true
  info:
    build:
      enabled: true
    defaults:
      enabled: true
    env:
      enabled: true
    git:
      enabled: true
      mode: full
    java:
      enabled: true
    os:
      enabled: true